{"key":"failedRequestsLog","value":"[{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T05:41:24.664Z\",\"logs\":[],\"error\":{\"message\":\"Failed to launch chrome!\\n[0512/124124.464030:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x55d0127e8b8c base::debug::StackTrace::StackTrace()\\n#1 0x55d012800993 logging::LogMessage::~LogMessage()\\n#2 0x55d01186a601 content::ZygoteHostImpl::Init()\\n#3 0x55d0114e03d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x55d0114e611f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x55d0165eceb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x55d01252abe0 content::RunNamedProcessTypeMain()\\n#7 0x55d01252b518 content::ContentMainRunnerImpl::Run()\\n#8 0x55d012535155 service_manager::Main()\\n#9 0x55d01252a104 content::ContentMain()\\n#10 0x55d0165ebf9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x55d0165ec022 headless::HeadlessBrowserMain()\\n#12 0x55d012532189 headless::HeadlessShellMain()\\n#13 0x55d010ba41ac ChromeMain\\n#14 0x7f35624eb06b __libc_start_main\\n#15 0x55d010ba402a _start\\n\\nReceived signal 6\\n#0 0x55d0127e8b8c base::debug::StackTrace::StackTrace()\\n#1 0x55d0127e86f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7f35684c3a80 <unknown>\\n#3 0x7f35624fe86b __GI_raise\\n#4 0x7f35624e940e __GI_abort\\n#5 0x55d0127e7175 base::debug::BreakDebugger()\\n#6 0x55d012800ddc logging::LogMessage::~LogMessage()\\n#7 0x55d01186a601 content::ZygoteHostImpl::Init()\\n#8 0x55d0114e03d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x55d0114e611f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x55d0165eceb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x55d01252abe0 content::RunNamedProcessTypeMain()\\n#12 0x55d01252b518 content::ContentMainRunnerImpl::Run()\\n#13 0x55d012535155 service_manager::Main()\\n#14 0x55d01252a104 content::ContentMain()\\n#15 0x55d0165ebf9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x55d0165ec022 headless::HeadlessBrowserMain()\\n#17 0x55d012532189 headless::HeadlessShellMain()\\n#18 0x55d010ba41ac ChromeMain\\n#19 0x7f35624eb06b __libc_start_main\\n#20 0x55d010ba402a _start\\n  r8: 0000000000000000  r9: 00007ffebd17cc40 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffebd17d348 r13: 0000000000000161 r14: 00007ffebd17d350 r15: 00007ffebd17cee9\\n  di: 0000000000000002  si: 00007ffebd17cc40  bp: 00007ffebd17ce90  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007f35624fe86b  sp: 00007ffebd17cc40\\n  ip: 00007f35624fe86b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\",\"stack\":\"Error: Failed to launch chrome!\\n[0512/124124.464030:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x55d0127e8b8c base::debug::StackTrace::StackTrace()\\n#1 0x55d012800993 logging::LogMessage::~LogMessage()\\n#2 0x55d01186a601 content::ZygoteHostImpl::Init()\\n#3 0x55d0114e03d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x55d0114e611f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x55d0165eceb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x55d01252abe0 content::RunNamedProcessTypeMain()\\n#7 0x55d01252b518 content::ContentMainRunnerImpl::Run()\\n#8 0x55d012535155 service_manager::Main()\\n#9 0x55d01252a104 content::ContentMain()\\n#10 0x55d0165ebf9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x55d0165ec022 headless::HeadlessBrowserMain()\\n#12 0x55d012532189 headless::HeadlessShellMain()\\n#13 0x55d010ba41ac ChromeMain\\n#14 0x7f35624eb06b __libc_start_main\\n#15 0x55d010ba402a _start\\n\\nReceived signal 6\\n#0 0x55d0127e8b8c base::debug::StackTrace::StackTrace()\\n#1 0x55d0127e86f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7f35684c3a80 <unknown>\\n#3 0x7f35624fe86b __GI_raise\\n#4 0x7f35624e940e __GI_abort\\n#5 0x55d0127e7175 base::debug::BreakDebugger()\\n#6 0x55d012800ddc logging::LogMessage::~LogMessage()\\n#7 0x55d01186a601 content::ZygoteHostImpl::Init()\\n#8 0x55d0114e03d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x55d0114e611f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x55d0165eceb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x55d01252abe0 content::RunNamedProcessTypeMain()\\n#12 0x55d01252b518 content::ContentMainRunnerImpl::Run()\\n#13 0x55d012535155 service_manager::Main()\\n#14 0x55d01252a104 content::ContentMain()\\n#15 0x55d0165ebf9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x55d0165ec022 headless::HeadlessBrowserMain()\\n#17 0x55d012532189 headless::HeadlessShellMain()\\n#18 0x55d010ba41ac ChromeMain\\n#19 0x7f35624eb06b __libc_start_main\\n#20 0x55d010ba402a _start\\n  r8: 0000000000000000  r9: 00007ffebd17cc40 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffebd17d348 r13: 0000000000000161 r14: 00007ffebd17d350 r15: 00007ffebd17cee9\\n  di: 0000000000000002  si: 00007ffebd17cc40  bp: 00007ffebd17ce90  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007f35624fe86b  sp: 00007ffebd17cc40\\n  ip: 00007f35624fe86b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\\n    at onClose (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:246:14)\\n    at Interface.helper.addEventListener (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:235:50)\\n    at Interface.emit (events.js:187:15)\\n    at Interface.close (readline.js:374:8)\\n    at Socket.onend (readline.js:152:10)\\n    at Socket.emit (events.js:187:15)\\n    at endReadableNT (_stream_readable.js:1086:12)\\n    at process._tickCallback (internal/process/next_tick.js:63:19)\"}},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T05:38:28.522Z\",\"logs\":[],\"error\":{\"message\":\"Failed to launch chrome!\\n[0512/123828.007172:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x56523556db8c base::debug::StackTrace::StackTrace()\\n#1 0x565235585993 logging::LogMessage::~LogMessage()\\n#2 0x5652345ef601 content::ZygoteHostImpl::Init()\\n#3 0x5652342653d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x56523426b11f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x565239371eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x5652352afbe0 content::RunNamedProcessTypeMain()\\n#7 0x5652352b0518 content::ContentMainRunnerImpl::Run()\\n#8 0x5652352ba155 service_manager::Main()\\n#9 0x5652352af104 content::ContentMain()\\n#10 0x565239370f9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x565239371022 headless::HeadlessBrowserMain()\\n#12 0x5652352b7189 headless::HeadlessShellMain()\\n#13 0x5652339291ac ChromeMain\\n#14 0x7fd2f62f606b __libc_start_main\\n#15 0x56523392902a _start\\n\\nReceived signal 6\\n#0 0x56523556db8c base::debug::StackTrace::StackTrace()\\n#1 0x56523556d6f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7fd2fc2cea80 <unknown>\\n#3 0x7fd2f630986b __GI_raise\\n#4 0x7fd2f62f440e __GI_abort\\n#5 0x56523556c175 base::debug::BreakDebugger()\\n#6 0x565235585ddc logging::LogMessage::~LogMessage()\\n#7 0x5652345ef601 content::ZygoteHostImpl::Init()\\n#8 0x5652342653d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x56523426b11f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x565239371eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x5652352afbe0 content::RunNamedProcessTypeMain()\\n#12 0x5652352b0518 content::ContentMainRunnerImpl::Run()\\n#13 0x5652352ba155 service_manager::Main()\\n#14 0x5652352af104 content::ContentMain()\\n#15 0x565239370f9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x565239371022 headless::HeadlessBrowserMain()\\n#17 0x5652352b7189 headless::HeadlessShellMain()\\n#18 0x5652339291ac ChromeMain\\n#19 0x7fd2f62f606b __libc_start_main\\n#20 0x56523392902a _start\\n  r8: 0000000000000000  r9: 00007ffef52ac5e0 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffef52acce8 r13: 0000000000000161 r14: 00007ffef52accf0 r15: 00007ffef52ac889\\n  di: 0000000000000002  si: 00007ffef52ac5e0  bp: 00007ffef52ac830  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007fd2f630986b  sp: 00007ffef52ac5e0\\n  ip: 00007fd2f630986b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\",\"stack\":\"Error: Failed to launch chrome!\\n[0512/123828.007172:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x56523556db8c base::debug::StackTrace::StackTrace()\\n#1 0x565235585993 logging::LogMessage::~LogMessage()\\n#2 0x5652345ef601 content::ZygoteHostImpl::Init()\\n#3 0x5652342653d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x56523426b11f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x565239371eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x5652352afbe0 content::RunNamedProcessTypeMain()\\n#7 0x5652352b0518 content::ContentMainRunnerImpl::Run()\\n#8 0x5652352ba155 service_manager::Main()\\n#9 0x5652352af104 content::ContentMain()\\n#10 0x565239370f9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x565239371022 headless::HeadlessBrowserMain()\\n#12 0x5652352b7189 headless::HeadlessShellMain()\\n#13 0x5652339291ac ChromeMain\\n#14 0x7fd2f62f606b __libc_start_main\\n#15 0x56523392902a _start\\n\\nReceived signal 6\\n#0 0x56523556db8c base::debug::StackTrace::StackTrace()\\n#1 0x56523556d6f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7fd2fc2cea80 <unknown>\\n#3 0x7fd2f630986b __GI_raise\\n#4 0x7fd2f62f440e __GI_abort\\n#5 0x56523556c175 base::debug::BreakDebugger()\\n#6 0x565235585ddc logging::LogMessage::~LogMessage()\\n#7 0x5652345ef601 content::ZygoteHostImpl::Init()\\n#8 0x5652342653d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x56523426b11f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x565239371eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x5652352afbe0 content::RunNamedProcessTypeMain()\\n#12 0x5652352b0518 content::ContentMainRunnerImpl::Run()\\n#13 0x5652352ba155 service_manager::Main()\\n#14 0x5652352af104 content::ContentMain()\\n#15 0x565239370f9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x565239371022 headless::HeadlessBrowserMain()\\n#17 0x5652352b7189 headless::HeadlessShellMain()\\n#18 0x5652339291ac ChromeMain\\n#19 0x7fd2f62f606b __libc_start_main\\n#20 0x56523392902a _start\\n  r8: 0000000000000000  r9: 00007ffef52ac5e0 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffef52acce8 r13: 0000000000000161 r14: 00007ffef52accf0 r15: 00007ffef52ac889\\n  di: 0000000000000002  si: 00007ffef52ac5e0  bp: 00007ffef52ac830  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007fd2f630986b  sp: 00007ffef52ac5e0\\n  ip: 00007fd2f630986b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\\n    at onClose (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:246:14)\\n    at Interface.helper.addEventListener (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:235:50)\\n    at Interface.emit (events.js:187:15)\\n    at Interface.close (readline.js:374:8)\\n    at Socket.onend (readline.js:152:10)\\n    at Socket.emit (events.js:187:15)\\n    at endReadableNT (_stream_readable.js:1086:12)\\n    at process._tickCallback (internal/process/next_tick.js:63:19)\"}},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T05:18:27.458Z\",\"logs\":[],\"error\":{\"message\":\"Failed to launch chrome!\\n[0512/121827.247611:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x563cd05ceb8c base::debug::StackTrace::StackTrace()\\n#1 0x563cd05e6993 logging::LogMessage::~LogMessage()\\n#2 0x563ccf650601 content::ZygoteHostImpl::Init()\\n#3 0x563ccf2c63d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x563ccf2cc11f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x563cd43d2eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x563cd0310be0 content::RunNamedProcessTypeMain()\\n#7 0x563cd0311518 content::ContentMainRunnerImpl::Run()\\n#8 0x563cd031b155 service_manager::Main()\\n#9 0x563cd0310104 content::ContentMain()\\n#10 0x563cd43d1f9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x563cd43d2022 headless::HeadlessBrowserMain()\\n#12 0x563cd0318189 headless::HeadlessShellMain()\\n#13 0x563cce98a1ac ChromeMain\\n#14 0x7fb5faed606b __libc_start_main\\n#15 0x563cce98a02a _start\\n\\nReceived signal 6\\n#0 0x563cd05ceb8c base::debug::StackTrace::StackTrace()\\n#1 0x563cd05ce6f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7fb600eaea80 <unknown>\\n#3 0x7fb5faee986b __GI_raise\\n#4 0x7fb5faed440e __GI_abort\\n#5 0x563cd05cd175 base::debug::BreakDebugger()\\n#6 0x563cd05e6ddc logging::LogMessage::~LogMessage()\\n#7 0x563ccf650601 content::ZygoteHostImpl::Init()\\n#8 0x563ccf2c63d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x563ccf2cc11f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x563cd43d2eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x563cd0310be0 content::RunNamedProcessTypeMain()\\n#12 0x563cd0311518 content::ContentMainRunnerImpl::Run()\\n#13 0x563cd031b155 service_manager::Main()\\n#14 0x563cd0310104 content::ContentMain()\\n#15 0x563cd43d1f9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x563cd43d2022 headless::HeadlessBrowserMain()\\n#17 0x563cd0318189 headless::HeadlessShellMain()\\n#18 0x563cce98a1ac ChromeMain\\n#19 0x7fb5faed606b __libc_start_main\\n#20 0x563cce98a02a _start\\n  r8: 0000000000000000  r9: 00007ffc13d93e80 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffc13d94588 r13: 0000000000000161 r14: 00007ffc13d94590 r15: 00007ffc13d94129\\n  di: 0000000000000002  si: 00007ffc13d93e80  bp: 00007ffc13d940d0  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007fb5faee986b  sp: 00007ffc13d93e80\\n  ip: 00007fb5faee986b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\",\"stack\":\"Error: Failed to launch chrome!\\n[0512/121827.247611:FATAL:zygote_host_impl_linux.cc(124)] No usable sandbox! Update your kernel or see https://chromium.googlesource.com/chromium/src/+/master/docs/linux_suid_sandbox_development.md for more information on developing with the SUID sandbox. If you want to live dangerously and need an immediate workaround, you can try using --no-sandbox.\\n#0 0x563cd05ceb8c base::debug::StackTrace::StackTrace()\\n#1 0x563cd05e6993 logging::LogMessage::~LogMessage()\\n#2 0x563ccf650601 content::ZygoteHostImpl::Init()\\n#3 0x563ccf2c63d5 content::BrowserMainLoop::EarlyInitialization()\\n#4 0x563ccf2cc11f content::BrowserMainRunnerImpl::Initialize()\\n#5 0x563cd43d2eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#6 0x563cd0310be0 content::RunNamedProcessTypeMain()\\n#7 0x563cd0311518 content::ContentMainRunnerImpl::Run()\\n#8 0x563cd031b155 service_manager::Main()\\n#9 0x563cd0310104 content::ContentMain()\\n#10 0x563cd43d1f9c headless::(anonymous namespace)::RunContentMain()\\n#11 0x563cd43d2022 headless::HeadlessBrowserMain()\\n#12 0x563cd0318189 headless::HeadlessShellMain()\\n#13 0x563cce98a1ac ChromeMain\\n#14 0x7fb5faed606b __libc_start_main\\n#15 0x563cce98a02a _start\\n\\nReceived signal 6\\n#0 0x563cd05ceb8c base::debug::StackTrace::StackTrace()\\n#1 0x563cd05ce6f1 base::debug::(anonymous namespace)::StackDumpSignalHandler()\\n#2 0x7fb600eaea80 <unknown>\\n#3 0x7fb5faee986b __GI_raise\\n#4 0x7fb5faed440e __GI_abort\\n#5 0x563cd05cd175 base::debug::BreakDebugger()\\n#6 0x563cd05e6ddc logging::LogMessage::~LogMessage()\\n#7 0x563ccf650601 content::ZygoteHostImpl::Init()\\n#8 0x563ccf2c63d5 content::BrowserMainLoop::EarlyInitialization()\\n#9 0x563ccf2cc11f content::BrowserMainRunnerImpl::Initialize()\\n#10 0x563cd43d2eb9 headless::HeadlessContentMainDelegate::RunProcess()\\n#11 0x563cd0310be0 content::RunNamedProcessTypeMain()\\n#12 0x563cd0311518 content::ContentMainRunnerImpl::Run()\\n#13 0x563cd031b155 service_manager::Main()\\n#14 0x563cd0310104 content::ContentMain()\\n#15 0x563cd43d1f9c headless::(anonymous namespace)::RunContentMain()\\n#16 0x563cd43d2022 headless::HeadlessBrowserMain()\\n#17 0x563cd0318189 headless::HeadlessShellMain()\\n#18 0x563cce98a1ac ChromeMain\\n#19 0x7fb5faed606b __libc_start_main\\n#20 0x563cce98a02a _start\\n  r8: 0000000000000000  r9: 00007ffc13d93e80 r10: 0000000000000008 r11: 0000000000000246\\n r12: 00007ffc13d94588 r13: 0000000000000161 r14: 00007ffc13d94590 r15: 00007ffc13d94129\\n  di: 0000000000000002  si: 00007ffc13d93e80  bp: 00007ffc13d940d0  bx: 0000000000000006\\n  dx: 0000000000000000  ax: 0000000000000000  cx: 00007fb5faee986b  sp: 00007ffc13d93e80\\n  ip: 00007fb5faee986b efl: 0000000000000246 cgf: 002b000000000033 erf: 0000000000000000\\n trp: 0000000000000000 msk: 0000000000000000 cr2: 0000000000000000\\n[end of stack trace]\\nCalling _exit(1). Core file will not be generated.\\n\\n\\nTROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md\\n\\n    at onClose (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:246:14)\\n    at Interface.helper.addEventListener (/home/toeymirumo/QA-RTANC/report/node_modules/puppeteer/lib/Launcher.js:235:50)\\n    at Interface.emit (events.js:187:15)\\n    at Interface.close (readline.js:374:8)\\n    at Socket.onend (readline.js:152:10)\\n    at Socket.emit (events.js:187:15)\\n    at endReadableNT (_stream_readable.js:1086:12)\\n    at process._tickCallback (internal/process/next_tick.js:63:19)\"}},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T04:54:51.976Z\",\"logs\":[],\"error\":{\"message\":\"Asset encoded as dataURI needs to have file extension jpeg|jpg|gif|png|svg|woff|tff|otf|woff2|eot\",\"stack\":\"Error: Asset encoded as dataURI needs to have file extension jpeg|jpg|gif|png|svg|woff|tff|otf|woff2|eot\\n    at convert (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:55:15)\\n    at /home/toeymirumo/QA-RTANC/report/node_modules/async-replace/async-replace.js:63:26\\n    at /home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:718:13\\n    at async.forEachOf.async.eachOf (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:233:13)\\n    at _parallel (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:717:9)\\n    at Object.async.parallel (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:731:9)\\n    at module.exports (/home/toeymirumo/QA-RTANC/report/node_modules/async-replace/async-replace.js:71:11)\\n    at tryCatcher (/home/toeymirumo/QA-RTANC/report/node_modules/bluebird/js/release/util.js:16:23)\\n    at ret (eval at makeNodePromisifiedEval (/home/toeymirumo/QA-RTANC/report/node_modules/bluebird/js/release/promisify.js:184:12), <anonymous>:13:39)\\n    at evaluateAssets (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:67:24)\\n    at Object.reporter.beforeRenderListeners.insert (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:272:34)\"}},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T04:54:47.624Z\",\"logs\":[],\"error\":{\"message\":\"Asset encoded as dataURI needs to have file extension jpeg|jpg|gif|png|svg|woff|tff|otf|woff2|eot\",\"stack\":\"Error: Asset encoded as dataURI needs to have file extension jpeg|jpg|gif|png|svg|woff|tff|otf|woff2|eot\\n    at convert (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:55:15)\\n    at /home/toeymirumo/QA-RTANC/report/node_modules/async-replace/async-replace.js:63:26\\n    at /home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:718:13\\n    at async.forEachOf.async.eachOf (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:233:13)\\n    at _parallel (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:717:9)\\n    at Object.async.parallel (/home/toeymirumo/QA-RTANC/report/node_modules/async/lib/async.js:731:9)\\n    at module.exports (/home/toeymirumo/QA-RTANC/report/node_modules/async-replace/async-replace.js:71:11)\\n    at tryCatcher (/home/toeymirumo/QA-RTANC/report/node_modules/bluebird/js/release/util.js:16:23)\\n    at ret (eval at makeNodePromisifiedEval (/home/toeymirumo/QA-RTANC/report/node_modules/bluebird/js/release/promisify.js:184:12), <anonymous>:13:39)\\n    at evaluateAssets (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:67:24)\\n    at Object.reporter.beforeRenderListeners.insert (/home/toeymirumo/QA-RTANC/report/node_modules/jsreport-assets/lib/assets.js:272:34)\"}}]","_id":"9W73DdYFsR1tFJvP","$entitySet":"settings"}
{"key":"requestsLog","value":"[{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T06:10:26.533Z\",\"logs\":[]},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T06:09:56.353Z\",\"logs\":[]},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T06:08:30.884Z\",\"logs\":[]},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T06:08:10.590Z\",\"logs\":[]},{\"template\":{\"shortid\":\"Sk4QNy4Cf\"},\"timestamp\":\"2018-05-12T06:07:49.412Z\",\"logs\":[]}]","_id":"ibkTAGHF04eMaSEv","$entitySet":"settings"}
